{"version":3,"file":"logInfo.js","sourceRoot":"","sources":["../../../src/bin/utils/logInfo.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,QAAQ,CAAC;AAG5B,OAAO,MAAM,EAAE,EAAE,GAAG,EAAE,MAAM,UAAU,CAAC;AAEvC;;;;;GAKG;AACH,eAAe,CACb,OAA8B,EAC9B,aAAqB,EACrB,IAAY,EACN,EAAE;IACR,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IAC/B,MAAM,QAAQ,GAAG,GAAG,WAAW,GAAG,aAAa,IAAI,CAAC;IAEpD,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,MAAM,IAAI,OAAO,QAAQ,EAAE,CAAC,CAAC;IAEnD,MAAM,IAAI,GAAG;EACb,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,IAAI;EACvC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,OAAO,CAAC,WAAW;EACrD,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,OAAO,CAAC,GAAG;;EAE1C,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,OAAO,CAAC,QAAQ;SACzC,GAAG,CAAC,CAAC,OAA4B,EAAE,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC;SACtD,IAAI,CAAC,IAAI,CAAC;EACb,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAC/C,CAAC,IAAY,EAAE,OAA8B,EAAE,EAAE,CAC/C,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,EAC9B,CAAC,CACF;EACD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAC/C,CAAC,IAAY,EAAE,OAA4C,EAAE,EAAE,CAC7D,IAAI;QACJ,OAAO,CAAC,MAAM,CAAC,MAAM,CACnB,CAAC,IAAY,EAAE,OAAO,EAAE,EAAE,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,EACvD,CAAC,CACF,EACH,CAAC,CACF;EACD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAClD,CACE,IAAY,EACZ,OAA6D,EAC7D,EAAE,CACF,IAAI;QACJ,OAAO,CAAC,MAAM,CAAC,MAAM,CACnB,CAAC,IAAY,EAAE,OAAO,EAAE,EAAE,CACxB,IAAI;YACJ,OAAO,CAAC,MAAM,CAAC,MAAM,CACnB,CAAC,IAAY,EAAE,OAAO,EAAE,EAAE,CAAC,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,EAC1D,CAAC,CACF,EACH,CAAC,CACF,EACH,CAAC,CACF;GACA,CAAC;IAEF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,CAAC,CAAC","sourcesContent":["import colors from 'colors';\n\nimport { ExportedApi } from '../../typings/exports';\nimport logger, { cli } from './logger';\n\n/**\n * Log information about the process.\n * @param apiData The API data.\n * @param fileTimeStart The time the file started.\n * @param text The text to log.\n */\nexport default (\n  apiData: Readonly<ExportedApi>,\n  fileTimeStart: number,\n  text: string\n): void => {\n  const fileTimeEnd = Date.now();\n  const fileTime = `${fileTimeEnd - fileTimeStart}ms`;\n\n  logger.info(`${cli.suc} âš¡ ${text} in ${fileTime}`);\n\n  const info = `\n${colors.magenta('Name:')} ${apiData.name}  \n${colors.magenta('Description:')} ${apiData.description}\n${colors.magenta('Base URL:')} ${apiData.url}\n\n${colors.cyan('Versions:')} ${apiData.versions\n    .map((version: { version: number }) => version.version)\n    .join(', ')}\n${colors.cyan('Groups:')} ${apiData.versions.reduce(\n    (prev: number, current: { groups: unknown[] }) =>\n      prev + current.groups.length,\n    0\n  )}\n${colors.cyan('Routes:')} ${apiData.versions.reduce(\n    (prev: number, current: { groups: { routes: unknown[] }[] }) =>\n      prev +\n      current.groups.reduce(\n        (prev: number, current) => prev + current.routes.length,\n        0\n      ),\n    0\n  )}\n${colors.cyan('Endpoints:')} ${apiData.versions.reduce(\n    (\n      prev: number,\n      current: { groups: { routes: { endpoints: unknown[] }[] }[] }\n    ) =>\n      prev +\n      current.groups.reduce(\n        (prev: number, current) =>\n          prev +\n          current.routes.reduce(\n            (prev: number, current) => prev + current.endpoints.length,\n            0\n          ),\n        0\n      ),\n    0\n  )}\n  `;\n\n  logger.info(info);\n};\n"]}