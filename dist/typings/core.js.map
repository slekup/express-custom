{"version":3,"file":"core.js","sourceRoot":"","sources":["../../src/typings/core.ts"],"names":[],"mappings":"","sourcesContent":["import { NextFunction, Request, Response } from 'express';\n\nexport type Middleware = (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => void;\n\nexport type PathString = `/${string}`;\n\nexport interface RateLimit {\n  statusCode: number;\n  window: number;\n  max: number;\n}\n\nexport type RequestMethod =\n  | 'GET'\n  | 'POST'\n  | 'PATCH'\n  | 'PUT'\n  | 'DELETE'\n  | 'OPTIONS'\n  | 'HEAD'\n  | 'TRACE'\n  | 'CONNECT';\n\ntype EndpointMessageType = 'INFO' | 'WARNING' | 'DANGER' | 'SUCCESS';\n\nexport interface EndpointNote {\n  type: EndpointMessageType;\n  text: string;\n}\n\ntype StatusCode =\n  | 200\n  | 201\n  | 204\n  | 301\n  | 400\n  | 401\n  | 403\n  | 404\n  | 405\n  | 409\n  | 500\n  | 501;\n\nexport interface EndpointResponse {\n  status: StatusCode;\n  message: string;\n  [key: string]: unknown;\n}\n\nexport type ControllerType = (\n  req: Request,\n  res: Response\n) => Promise<unknown> | unknown;\n\nexport type StructureType = 'schema' | 'option';\n\nexport interface StructureField {\n  name: string;\n  description: string;\n  type?: 'string' | 'number' | 'boolean' | 'object' | 'array';\n  required?: boolean;\n  structure?: string;\n  option?: string;\n}\n"]}