{"version":3,"file":"ObjectValue.js","sourceRoot":"","sources":["../../../src/builders/Value/ObjectValue.ts"],"names":[],"mappings":"AAAA,OAAO,SAA+B,MAAM,0BAA0B,CAAC;AAOvE;;GAEG;AACH,MAAM,CAAC,OAAO,OAAO,kBACnB,SAAQ,SAAS;IAGV,IAAI,GAAG,QAAiB,CAAC;IACzB,UAAU,CAAS;IAE1B;;;OAGG;IACH,YAAmB,OAA2B;QAC5C,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACvB,CAAC;IAED;;;OAGG;IACI,MAAM;QACX,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;SAC1B,CAAC;IACJ,CAAC;CACF","sourcesContent":["import BaseValue, { BaseValueOptions } from '@builders/Base/BaseValue';\nimport { ObjectValue, Schema } from '@typings/schema';\n\nexport type ObjectValueOptions = BaseValueOptions & {\n  properties: Schema;\n};\n\n/**\n * The object value builder class.\n */\nexport default class ObjectValueBuilder<T>\n  extends BaseValue\n  implements ObjectValue<T>\n{\n  public type = 'object' as const;\n  public properties: Schema;\n\n  /**\n   * Creates an instance of the object value builder class.\n   * @param options The options of the object value builder class.\n   */\n  public constructor(options: ObjectValueOptions) {\n    super(options);\n    this.properties = {};\n  }\n\n  /**\n   * Exports the value.\n   * @returns The exported value.\n   */\n  public export(): unknown {\n    return {\n      type: this.type,\n      name: this.name,\n      description: this.description,\n      required: this.required,\n      structure: this.structure,\n    };\n  }\n}\n"]}