{"version":3,"file":"ArrayValue.js","sourceRoot":"","sources":["../../../src/builders/Value/ArrayValue.ts"],"names":[],"mappings":"AAAA,OAAO,SAA+B,MAAM,0BAA0B,CAAC;AAWvE;;GAEG;AACH,MAAM,CAAC,OAAO,OAAO,UACnB,SAAQ,SAAS;IAGV,IAAI,GAAG,OAAgB,CAAC;IACxB,GAAG,CAAU;IACb,GAAG,CAAU;IACb,MAAM,CAAW;IACjB,QAAQ,CAAiB;IACzB,KAAK,CAA+B;IAE3C;;;;;;;;OAQG;IACH,YAAmB,EACjB,GAAG,EACH,GAAG,EACH,MAAM,EACN,QAAQ,EACR,KAAK,EACL,GAAG,OAAO,EACQ;QAClB,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,GAAG;YAAE,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACxB,IAAI,GAAG;YAAE,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,KAAK,CAAC;QAC9B,IAAI,QAAQ;YAAE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACvC,IAAI,KAAK;YAAE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAChC,CAAC;IAED;;;OAGG;IACI,MAAM;QACX,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC;IACJ,CAAC;CACF","sourcesContent":["import BaseValue, { BaseValueOptions } from '@builders/Base/BaseValue';\nimport { ArrayContains, IArrayValue, ValueSchema } from '@typings/schema';\n\nexport type ArrayValueOptions = BaseValueOptions & {\n  min?: number;\n  max?: number;\n  unique?: boolean;\n  contains?: ArrayContains;\n  items?: ValueSchema | ValueSchema[];\n};\n\n/**\n * The ArrayValue class, used to create array values.\n */\nexport default class ArrayValue\n  extends BaseValue\n  implements IArrayValue<ValueSchema>\n{\n  public type = 'array' as const;\n  public min?: number;\n  public max?: number;\n  public unique?: boolean;\n  public contains?: ArrayContains;\n  public items?: ValueSchema | ValueSchema[];\n\n  /**\n   * Creates an instance of the ArrayValue class.\n   * @param options The options for the ArrayValue class.\n   * @param options.min The minimum amount of items in the array.\n   * @param options.max The maximum amount of items in the array.\n   * @param options.unique Whether the array is unique.\n   * @param options.contains The type that the array needs to contain.\n   * @param options.items The items of the array to be matched.\n   */\n  public constructor({\n    min,\n    max,\n    unique,\n    contains,\n    items,\n    ...options\n  }: ArrayValueOptions) {\n    super(options);\n    if (min) this.min = min;\n    if (max) this.max = max;\n    this.unique = unique ?? false;\n    if (contains) this.contains = contains;\n    if (items) this.items = items;\n  }\n\n  /**\n   * Exports the ArrayValue class properties.\n   * @returns The ArrayValue class properties.\n   */\n  public export(): unknown {\n    return {\n      type: this.type,\n      name: this.name,\n      description: this.description,\n      required: this.required,\n      structure: this.structure,\n      max: this.max,\n      min: this.min,\n      unique: this.unique,\n    };\n  }\n}\n"]}