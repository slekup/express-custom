{"version":3,"file":"BaseApp.js","sourceRoot":"","sources":["../../../src/builders/Base/BaseApp.ts"],"names":[],"mappings":"AAAA,OAAO,OAAO,EAAE,EAAW,MAAM,EAAE,MAAM,SAAS,CAAC;AACnD,OAAO,EAAW,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAGxD,OAAO,kBAAkB,MAAM,2BAA2B,CAAC;AAE3D;;GAEG;AACH,MAAM,CAAC,OAAO,OAAO,OAAO;IACnB,GAAG,CAEgC;IAChC,SAAS,CAAsB;IAC/B,WAAW,CAAe;IAEpC;;;;OAIG;IACH,YAAmB,OAAU,QAAa;QACxC,IAAI,IAAI,KAAK,KAAK,EAAE;YAClB,IAAI,CAAC,GAAG,GAAG,OAAO,EAAuC,CAAC;SAC3D;aAAM;YACL,IAAI,CAAC,GAAG,GAAG,MAAM,EAAyC,CAAC;SAC5D;QACD,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IACxB,CAAC;IAED;;;;OAIG;IACI,YAAY,CAAC,OAAyB;QAC3C,IAAI,IAAI,CAAC,SAAS;YAAE,MAAM,IAAI,kBAAkB,CAAC,yBAAyB,CAAC,CAAC;QAE5E,IAAI,CAAC,SAAS,GAAG;YACf,UAAU,EAAE,OAAO,CAAC,UAAU,IAAI,GAAG;YACrC,GAAG,CAAC,OAAO,OAAO,CAAC,QAAQ,KAAK,QAAQ;gBACtC,CAAC,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,QAAQ,EAAE;gBAC9B,CAAC,CAAC,EAAE,CAAC;YACP,GAAG,CAAC,OAAO,OAAO,CAAC,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;SACjE,CAAC;QAEF,yCAAyC;QACzC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;QAEjC,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;OAIG;IACI,aAAa,CAAC,UAAsB;QACzC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAClC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACzB,OAAO,IAAI,CAAC;IACd,CAAC;CACF","sourcesContent":["import express, { Express, Router } from 'express';\nimport { Options, rateLimit } from 'express-rate-limit';\n\nimport { Middleware, RateLimit } from '@typings/core';\nimport ExpressCustomError from '@utils/ExpressCustomError';\n\n/**\n * The BaseApp class, used to build on top of an express app or router.\n */\nexport default class BaseApp<T extends 'router' | 'app'> {\n  public raw:\n    | (T extends 'app' ? Express : never)\n    | (T extends 'router' ? Router : never);\n  protected ratelimit?: Partial<RateLimit>;\n  protected middlewares: Middleware[];\n\n  /**\n   * Creates an instance of the BaseApp class.\n   * Pass 'app' to create an express app, and 'router' for an express router.\n   * @param type The type of the base app - 'app' or 'router'.\n   */\n  public constructor(type: T = 'router' as T) {\n    if (type === 'app') {\n      this.raw = express() as T extends 'app' ? Express : never;\n    } else {\n      this.raw = Router() as T extends 'router' ? Router : never;\n    }\n    this.middlewares = [];\n  }\n\n  /**\n   * Sets the rate limit for the base app or router.\n   * @param options The rate limit options provided by the express-rate-limit package.\n   * @returns The BaseApp class.\n   */\n  public setRateLimit(options: Partial<Options>): this {\n    if (this.ratelimit) throw new ExpressCustomError('Rate limit already set.');\n\n    this.ratelimit = {\n      statusCode: options.statusCode ?? 429,\n      ...(typeof options.windowMs === 'number'\n        ? { window: options.windowMs }\n        : {}),\n      ...(typeof options.max === 'number' ? { max: options.max } : {}),\n    };\n\n    // Use the express-rate-limit middleware.\n    this.raw.use(rateLimit(options));\n\n    return this;\n  }\n\n  /**\n   * Adds a middleware to the route. Add it before adding the route.\n   * @param middleware The middleware to add to the route.\n   * @returns The BaseApp class.\n   */\n  public addMiddleware(middleware: Middleware): this {\n    this.middlewares.push(middleware);\n    this.raw.use(middleware);\n    return this;\n  }\n}\n"]}